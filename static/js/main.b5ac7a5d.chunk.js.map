{"version":3,"sources":["components/Items/UpdateItem/index.js","functions/cutNumber.js","components/Items/Item/index.js","components/Items/index.js","components/Table/Row.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Table/DoRow.js","components/Doit/ThisWeek/index.js","components/Doit/index.js","components/Archive/index.js","components/Nav/index.js","components/Header/turtledot.svg","components/Header/index.js","components/Settings/index.js","functions/sortColor.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["UpdateItem","props","componentDidMount","id","setState","text","type","number","color","handleInput","event","name","target","value","setColor","updateItem","validate","onUpdateItem","state","switchType","prevState","length","className","this","onChange","onClick","min","max","onCancelUpdate","colors","map","React","Component","cutNumber","toString","slice","Math","ceil","Item","checkInUse","componentDidUpdate","prevProps","snapshot","currentlyAdding","cancelEdit","startEdit","editing","onCancelNewItem","editItem","data","storedItems","JSON","parse","localStorage","getItem","edited","findIndex","item","setItem","stringify","onEditIteminState","forEach","week","items","find","inUse","bind","disabled","onDeleteItem","Items","newItem","adding","cancelNewItem","addItem","uuidv4","push","onNewItemToState","editItemInState","onUpdateState","deleteItem","window","confirm","filtered","filter","Row","doNumbers","onesAndZeroes","todo","n","currentNumber","reduce","a","b","tooHigh","tooLow","cutNum","goalNum","draggable","weekBeginning","data-index","index","data-dragid","data-dragweek","onDragStart","onDragOver","onDragLeave","onDrop","onRemoveItem","day","i","data-day","data-week","onChangeDay","undefined","touchData","ArrangeWeek","createWeek","then","selected","unselected","scida","weeks","date","currentWeek","splice","saveWeek","onAddItemToWeek","currentTarget","addAllItems","ids","onAddAllItemsToWeek","copyAllItems","copyWeek","thisWeekBeginning","array","onCopyAllFromThisWeek","preventDefault","movedItem","document","getElementById","movingOver","movedParent","parentNode","rect","getBoundingClientRect","dataset","dragweek","dataTransfer","dropEffect","classList","add","clientY","top","bottom","remove","childNodes","row","droppingOn","onMoveItemInWeek","removeItem","onRemoveItemFromWeek","saveDay","weekName","days","Arrange","nextWeekBeginning","DoRow","allBoolDone","allCountDone","countedNumber","today","Date","getDay","onDoDay","archive","ThisWeek","editable","getLastWeek","updateArchive","lastWeek","unshift","allItems","doDay","lastWeekBeginning","Doit","Archive","getArchive","Nav","to","activeClassName","style","fontSize","Header","src","turtledot","alt","Settings","onClearItems","onClearWeeks","onClearAll","sortColor","sort","App","getItems","getWeeks","newItemToState","updateState","getWeekBeginning","addWeek","newDate","padZero","setDate","getDate","getFullYear","getMonth","addItemToWeek","needle","newWeek","addAllItemsToWeek","copyAllFromThisWeek","moveItemInWeek","dragged","dropped","rowToDrop","console","log","removeItemFromWeek","newWeekItems","changeDay","closed","clearItems","clearWeeks","clearAll","clear","basename","process","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b5ac7a5d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UpdateItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.id) this.setState({\r\n            id: this.props.id,\r\n            text: this.props.text,\r\n            type: this.props.type,\r\n            number: this.props.number,\r\n            color: this.props.color\r\n        });\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    setColor = (event) => {\r\n        this.setState({\r\n            color: event.target.value\r\n        });\r\n    }\r\n\r\n    updateItem = () => {\r\n        if (this.validate()) {\r\n            this.props.onUpdateItem({...this.state});\r\n            this.setState({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    switchType = () => {\r\n        this.setState(prevState => ({\r\n            type: !prevState.type\r\n        }));\r\n    }\r\n\r\n    validate = () => {\r\n        if (this.state.text.length > 0 && this.state.text.length < 12 && this.state.number > 0) {\r\n            if (this.state.type) {\r\n                if (this.state.number < 8) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (this.state.number < 100000) {\r\n                    return true;\r\n                }\r\n            }\r\n        } else return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className='item'>\r\n                    <input\r\n                        type='text'\r\n                        name='text'\r\n                        value={this.state.text}\r\n                        onChange={this.handleInput}\r\n                        className='text'\r\n                    />\r\n                    <button\r\n                        name='type'\r\n                        value={this.state.type}\r\n                        onClick={this.switchType}\r\n                        className='type'>\r\n                        {this.state.type ? <div className='day spot open'></div> : '#'}\r\n                    </button>\r\n                    <input\r\n                        type='number'\r\n                        name='number'\r\n                        min='1'\r\n                        max='99999'\r\n                        value={this.state.number}\r\n                        onChange={this.handleInput}\r\n                        className='number'\r\n                    />\r\n                    <button\r\n                        className={'color ' + this.state.color}>\r\n                    </button>\r\n                    <button\r\n                        onClick={this.props.onCancelUpdate}\r\n                        className='plus-sign delete'>\r\n                        +\r\n                    </button>\r\n                </div>\r\n                <div className='edit-box'>\r\n                    <div className='palette'>\r\n                        {this.props.colors.map(color =>\r\n                            <button\r\n                                key={color}\r\n                                value={color}\r\n                                className={'palette-square ' + color}\r\n                                onClick={this.setColor}>\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <div className='edit-box-buttons'>\r\n                        <button\r\n                            onClick={this.updateItem}\r\n                            className='edit-complete'>\r\n                            &#10003;\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateItem;\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 7 === 0) return number.toString().slice(0, 2) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport '../../weeks.css';\r\nimport cutNumber from \"../../../functions/cutNumber\";\r\n\r\nclass Item extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            inUse: false\r\n        };\r\n        this.cutNumber = cutNumber.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.checkInUse();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props && this.props.currentlyAdding) {\r\n            this.cancelEdit();\r\n        }\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.setState({\r\n            editing: true\r\n        });\r\n        this.props.onCancelNewItem();\r\n    }\r\n\r\n    cancelEdit = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n\r\n    editItem = (data) => {\r\n        let storedItems = JSON.parse(localStorage.getItem('items'));\r\n        let edited = storedItems.findIndex(item => item.id === data.id);\r\n        storedItems[edited] = data;\r\n        localStorage.setItem('items', JSON.stringify(storedItems));\r\n        this.props.onEditIteminState(storedItems);\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n\r\n    checkInUse = () => {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find(item => item[0] === this.props.id)) {\r\n                    this.setState({\r\n                        inUse: true\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.editing ?\r\n                <UpdateItem\r\n                    id={this.props.id}\r\n                    text={this.props.text}\r\n                    type={this.props.type}\r\n                    number={this.props.number}\r\n                    color={this.props.color}\r\n                    colors={this.props.colors}\r\n                    onUpdateItem={this.editItem}\r\n                    onCancelUpdate={this.cancelEdit}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={this.startEdit}\r\n                        className='text'>\r\n                        {this.props.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={this.startEdit}\r\n                        className='type'>\r\n                        {this.props.type ? <div className='day spot open'></div> : '#'}\r\n                    </button>\r\n                    <button\r\n                        onClick={this.startEdit}\r\n                        className='number'>\r\n                        {this.cutNumber(this.props.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={this.startEdit}\r\n                        className={'color ' + this.props.color}>\r\n                    </button>\r\n                    <button\r\n                        value={this.props.id}\r\n                        disabled={this.state.inUse}\r\n                        onClick={this.props.onDeleteItem}\r\n                        className='plus-sign delete'>\r\n                        +\r\n                    </button>\r\n                </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport './items.css';\r\n\r\nclass Items extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            adding: false\r\n        };\r\n    }\r\n\r\n    newItem = () => {\r\n        this.setState({\r\n            adding: true\r\n        });\r\n    }\r\n\r\n    cancelNewItem = () => {\r\n        this.setState({\r\n            adding: false\r\n        });\r\n    }\r\n\r\n    addItem = (data) => {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let storedItems = [];\r\n        if (localStorage.getItem('items')) {\r\n            storedItems = JSON.parse(localStorage.getItem('items'));\r\n        }\r\n        storedItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(storedItems));\r\n        this.props.onNewItemToState(item);\r\n    }\r\n\r\n    editItemInState = (edited) => {\r\n        this.props.onUpdateState(edited);\r\n    }\r\n\r\n    deleteItem = (event) => {\r\n        if (window.confirm('Really delete?')) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let filtered = storedItems.filter(item => item.id !== event.target.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            this.props.onUpdateState(filtered);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id='items'>\r\n                <h1>\r\n                    Items\r\n                </h1>\r\n                {this.props.items.map(item =>\r\n                    <Item\r\n                        key={item.id}\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        type={item.type}\r\n                        number={item.number}\r\n                        color={item.color}\r\n                        colors={this.props.colors}\r\n                        currentlyAdding={this.state.adding}\r\n                        onEditIteminState={this.editItemInState}\r\n                        onCancelNewItem={this.cancelNewItem}\r\n                        onDeleteItem={this.deleteItem}\r\n                    />\r\n                )}\r\n                {this.state.adding ?\r\n                    <UpdateItem\r\n                        colors={this.props.colors}\r\n                        onUpdateItem={this.addItem}\r\n                        onCancelUpdate={this.cancelNewItem}\r\n                    />\r\n                    :\r\n                    <button\r\n                        onClick={this.newItem}\r\n                        className='plus-sign add'>\r\n                        +\r\n                    </button>\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import React from 'react';\r\nimport cutNumber from \"../../functions/cutNumber\";\r\n\r\nclass Row extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            onesAndZeroes: '',\r\n            currentNumber: '',\r\n            tooHigh: '',\r\n            tooLow: '',\r\n            cutNum: '',\r\n            goalNum: ''\r\n        }\r\n        this.cutNumber = cutNumber.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.doNumbers();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props) this.doNumbers();\r\n    }\r\n\r\n    doNumbers = () => {\r\n        const onesAndZeroes = this.props.todo.map(n => n = (n >= 1 ? 1 : 0));\r\n        const currentNumber = onesAndZeroes.reduce((a, b) => a + b, 0);\r\n        const tooHigh = currentNumber > +this.props.number;\r\n        const tooLow = currentNumber < +this.props.number;\r\n        const cutNum = this.cutNumber(this.props.number);\r\n        const goalNum = this.cutNumber(this.props.number / currentNumber);\r\n        this.setState({\r\n            onesAndZeroes: onesAndZeroes,\r\n            currentNumber: currentNumber,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr\r\n                draggable={true}\r\n                id={this.props.id + this.props.weekBeginning}\r\n                data-index={this.props.index}\r\n                data-dragid={this.props.id}\r\n                data-dragweek={this.props.weekBeginning}\r\n                className={this.props.color}\r\n                onDragStart={this.props.onDragStart}\r\n                onDragOver={this.props.onDragOver}\r\n                onDragLeave={this.props.onDragLeave}\r\n                onDrop={this.props.onDrop}>\r\n                <td\r\n                    id={this.props.id}\r\n                    className='week-item left-column'>\r\n                    <button\r\n                        value={this.props.id}\r\n                        onClick={this.props.onRemoveItem}\r\n                        className='week-item-delete'>\r\n                        &mdash;\r\n                    </button>\r\n                    {this.props.text}\r\n                </td>\r\n                <td className={'main-cell week-item-number'\r\n                    + (this.props.type && (this.state.tooHigh ? ' week-number-arrow-down' : this.state.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                    {this.state.cutNum}\r\n                </td>\r\n                {this.props.todo.map((day, i) =>\r\n                    <td\r\n                        key={this.props.id + i}\r\n                        id={this.props.id}\r\n                        data-day={i}\r\n                        data-week={this.props.weekBeginning}\r\n                        onClick={day < 100 ? this.props.onChangeDay : undefined}\r\n                        className='main-cell week-spots'>\r\n                        <div className={this.props.type ? 'spot grey' + (day === 100 ? ' closed' : day === 1 ? ' open' : '') : 'type-cell grey'}>\r\n                            {!this.props.type && day > 0 ? this.state.goalNum : ''}\r\n                        </div>\r\n                    </td>\r\n                )}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React from 'react';\r\nimport Row from '../../Table/Row';\r\nimport '../../weeks.css';\r\nimport '../arrange.css';\r\n\r\nlet touchData = {};\r\n\r\nclass ArrangeWeek extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: [\r\n                {\r\n                    id: '',\r\n                    text: '',\r\n                    number: 0,\r\n                    color: '',\r\n                    todo: [0,0,0,0,0,0,0]\r\n                }\r\n            ],\r\n            unselected: [],\r\n            copyWeek: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.createWeek().then();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props) {\r\n            this.createWeek().then();\r\n        }\r\n    }\r\n\r\n    createWeek = async () => {\r\n        let selected = [];\r\n        let unselected = [...this.props.scida.items];\r\n        let currentWeek = await this.props.scida.weeks.find(week => week.date === this.props.weekBeginning);\r\n        if (currentWeek !== undefined) {\r\n            currentWeek.items.forEach(week => {\r\n                if (unselected.find(item => item.id === week[0])) {\r\n                    let index = unselected.findIndex(index => index.id === week[0]);\r\n                    let item = unselected.splice(index, 1);\r\n                    item[0].todo = week[1];\r\n                    selected.push(item[0]);\r\n                }\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: [...selected],\r\n            unselected: [...unselected]\r\n        });\r\n    }\r\n\r\n    saveWeek = (event) => {\r\n        this.props.onAddItemToWeek(event.currentTarget.value, this.props.weekBeginning);\r\n    }\r\n\r\n    addAllItems = () => {\r\n        let ids = [];\r\n        this.state.unselected.forEach(item => ids.push(item.id));\r\n        this.props.onAddAllItemsToWeek(ids, this.props.weekBeginning);\r\n    }\r\n\r\n    copyAllItems = () => {\r\n        if (localStorage.getItem('weeks')) {\r\n            let weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            let copyWeek = weeks.find(week => week.date === this.props.scida.thisWeekBeginning);\r\n            copyWeek.items.forEach(item => item[1].forEach((number, index, array) => {if (array[index] > 1) array[index] = 1}));\r\n            this.props.onCopyAllFromThisWeek(this.props.weekBeginning, copyWeek.items);\r\n        }\r\n    }\r\n\r\n    onDragStart = (event) => {\r\n        touchData.item = event.currentTarget.id;\r\n    }\r\n\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n        let movedItem = document.getElementById(touchData.item),\r\n            movingOver = event.currentTarget,\r\n            movedParent = movingOver.parentNode;\r\n        touchData.rect = movingOver.getBoundingClientRect();\r\n        if (movedParent.dataset.dragweek === movingOver.dataset.dragweek) {\r\n            if (movingOver === movedItem) { // prevent dropping on self\r\n                event.dataTransfer.dropEffect = 'none';\r\n            } else if (movedItem.dataset.dragweek === movingOver.dataset.dragweek) {\r\n                movingOver.classList.add('scooch');\r\n                event.dataTransfer.dropEffect = 'move';\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragLeave = (event) => {\r\n        if (event.clientY < touchData.rect.top || event.clientY > touchData.rect.bottom) {\r\n            event.currentTarget.classList.remove('scooch');\r\n        }\r\n    }\r\n\r\n    onDrop = (event) => {\r\n        event.preventDefault();\r\n        event.currentTarget.parentNode.childNodes.forEach(row => row.classList.remove('scooch'));\r\n        let movedItem = document.getElementById(touchData.item),\r\n            droppingOn = event.currentTarget;\r\n        this.props.onMoveItemInWeek(+movedItem.dataset.index, +droppingOn.dataset.index, droppingOn.dataset.dragweek);\r\n    }\r\n\r\n    removeItem = (event) => {\r\n        if (window.confirm('Really remove?')) {\r\n            this.props.onRemoveItemFromWeek(event.target.value, this.props.weekBeginning);\r\n        }\r\n    }\r\n\r\n    saveDay = (event) => {\r\n        this.props.onChangeDay(event, this.props.weekBeginning);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='week'>\r\n                <h2>\r\n                    {this.props.weekName}\r\n                </h2>\r\n                <section>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <td className='week-date left-column'>\r\n                                {this.props.weekBeginning}\r\n                            </td>\r\n                            <td className='week-date'>\r\n\r\n                            </td>\r\n                            {this.props.scida.days.map((day, i) =>\r\n                                <td\r\n                                    key={day + i + this.props.weekBeginning}\r\n                                    className='day'>\r\n                                    {day}\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody data-dragweek={this.props.weekBeginning}>\r\n                        {this.state.selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + this.props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={this.props.weekBeginning}\r\n                                onChangeDay={this.saveDay}\r\n                                onDragStart={this.onDragStart}\r\n                                onDragOver={this.onDragOver}\r\n                                onDragLeave={this.onDragLeave}\r\n                                onDrop={this.onDrop}\r\n                                onRemoveItem={this.removeItem}\r\n                            />\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n                {this.state.unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    {this.state.selected.length < 1 && this.props.weekName === 'Next Week' &&\r\n                    <button\r\n                        className='addAllItems copy'\r\n                        onClick={this.copyAllItems}>\r\n                        copy schedule from this week\r\n                    </button>\r\n                    }\r\n                    <button\r\n                        className='addAllItems'\r\n                        onClick={this.addAllItems}>\r\n                        add all items\r\n                    </button>\r\n                    <div className='items-list'>\r\n                        {this.state.unselected.map(item =>\r\n                            <button\r\n                                key={item.id + this.props.weekBeginning + 'u'}\r\n                                value={item.id}\r\n                                className={'items-list-item ' + item.color}\r\n                                onClick={this.saveWeek}>\r\n                                {item.text}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArrangeWeek;\r\n","import React from 'react';\r\nimport ArrangeWeek from \"./ArrangeWeek\";\r\nimport '../weeks.css';\r\n\r\nclass Arrange extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <main id='arrange'>\r\n                <h1>\r\n                    Arrange\r\n                </h1>\r\n                <ArrangeWeek\r\n                    key={'nextWeek'}\r\n                    weekName={'Next Week'}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.nextWeekBeginning}\r\n                    onAddItemToWeek={this.props.onAddItemToWeek}\r\n                    onAddAllItemsToWeek={this.props.onAddAllItemsToWeek}\r\n                    onCopyAllFromThisWeek={this.props.onCopyAllFromThisWeek}\r\n                    onMoveItemInWeek={this.props.onMoveItemInWeek}\r\n                    onRemoveItemFromWeek={this.props.onRemoveItemFromWeek}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n                <ArrangeWeek\r\n                    key={'thisWeek'}\r\n                    weekName={'This Week'}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.thisWeekBeginning}\r\n                    onAddItemToWeek={this.props.onAddItemToWeek}\r\n                    onAddAllItemsToWeek={this.props.onAddAllItemsToWeek}\r\n                    onMoveItemInWeek={this.props.onMoveItemInWeek}\r\n                    onRemoveItemFromWeek={this.props.onRemoveItemFromWeek}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrange;\r\n","import React from 'react';\r\nimport cutNumber from \"../../functions/cutNumber\";\r\n\r\nexport default function DoRow(props) {\r\n\r\n    const currentNumber = props.todo.reduce((a, b) => a + b, 0);\r\n    const allBoolDone = currentNumber >= +props.number * 100;\r\n    const allCountDone = currentNumber !== 0 && currentNumber % 100 === 0;\r\n    let countedNumber = 0;\r\n    props.todo.forEach(day => day > 0 ? countedNumber++ : null);\r\n    const goalNum = cutNumber(props.number / countedNumber);\r\n    const today = new Date().getDay() - 1;\r\n\r\n    return (\r\n        <tr\r\n            id={props.id + props.weekBeginning}\r\n            className={props.type ? (allBoolDone ? 'allDone' : props.color) : (allCountDone ? 'allDone' : props.color)}>\r\n            <td\r\n                id={props.id}\r\n                className='week-item left-column'>\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'}>\r\n                {cutNumber(props.number)}\r\n            </td>\r\n            {props.todo.map((day, i) =>\r\n                <td\r\n                    key={props.id + i}\r\n                    id={props.id}\r\n                    data-day={i}\r\n                    data-week={props.weekBeginning}\r\n                    onClick={props.onDoDay}\r\n                    className={'main-cell week-spots' + (!props.archive && today === i ? props.color : '')}>\r\n                    <div\r\n                        className={props.type ?\r\n                            ('spot' + (day === 100 ? ' closed' : day === 1 ? ' open' : ''))\r\n                            :\r\n                            ('type-cell' + (day === 1 ? ' grey' : ''))}>\r\n                        {!props.type && day > 0 ? goalNum : ''}\r\n                    </div>\r\n                </td>\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport DoRow from \"../../Table/DoRow\";\r\nimport '../../weeks.css';\r\n\r\nclass ThisWeek extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: '',\r\n            items: [\r\n                {\r\n                    id: '',\r\n                    text: '',\r\n                    number: '',\r\n                    color: '',\r\n                    todo: [0,0,0,0,0,0,0]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.editable ? this.createWeek() : this.getLastWeek();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props) {\r\n            this.props.editable ? this.createWeek() : this.getLastWeek();\r\n        }\r\n    }\r\n\r\n    updateArchive = () => {\r\n        let archive = [];\r\n        let lastWeek = {\r\n            date: this.props.scida.thisWeekBeginning,\r\n            items: [...this.state.items]\r\n        };\r\n        if (localStorage.getItem('archive')) {\r\n            archive = JSON.parse(localStorage.getItem('archive'));\r\n            let index = archive.findIndex(week => week.date === this.props.scida.thisWeekBeginning);\r\n            if (index !== -1) {\r\n                archive[index] = lastWeek;\r\n            } else {\r\n                archive.unshift(lastWeek);\r\n            }\r\n        } else {\r\n            archive.unshift(lastWeek);\r\n        }\r\n        localStorage.setItem('archive', JSON.stringify(archive));\r\n    }\r\n\r\n    createWeek = () => {\r\n        let items = [],\r\n            allItems = [...this.props.scida.items];\r\n        let currentWeek = this.props.scida.weeks.find(week => week.date === this.props.weekBeginning);\r\n        if (currentWeek !== undefined) {\r\n            currentWeek.items.forEach(week => {\r\n                let index = allItems.findIndex(index => index.id === week[0]);\r\n                let item = allItems.splice(index, 1);\r\n                item[0].todo = week[1];\r\n                items.push(item[0]);\r\n            });\r\n        }\r\n        this.setState({\r\n            items: [...items]\r\n        });\r\n    }\r\n\r\n    doDay = (event) => {\r\n        this.props.onChangeDay(event, this.props.weekBeginning, 1);\r\n        this.updateArchive();\r\n    }\r\n\r\n    getLastWeek = () => {\r\n        if (localStorage.getItem('archive')) {\r\n            let archive = JSON.parse(localStorage.getItem('archive'));\r\n            let lastWeek = archive.find(week => week.date === this.props.scida.lastWeekBeginning);\r\n            if (lastWeek !== undefined) this.setState({\r\n                items: [...lastWeek.items]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='week'>\r\n                <h2>\r\n                    {this.props.weekName}\r\n                </h2>\r\n                <section>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <td className='week-date left-column'>\r\n                                {this.props.weekBeginning}\r\n                            </td>\r\n                            <td className='week-date'>\r\n\r\n                            </td>\r\n                            {this.props.scida.days.map((day, i) =>\r\n                                <td\r\n                                    key={day + i + this.props.weekBeginning}\r\n                                    className='day'>\r\n                                    {day}\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.props.archive ? this.props.week.items.map((item, i) =>\r\n                            <DoRow\r\n                                key={item.id + this.props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={this.props.weekBeginning}\r\n                                archive={true}\r\n                                onDoDay={this.props.editable ? this.doDay : undefined}\r\n                            />\r\n                        )\r\n                        :\r\n                        this.state.items.map((item, i) =>\r\n                            <DoRow\r\n                                key={item.id + this.props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={this.props.weekBeginning}\r\n                                archive={false}\r\n                                onDoDay={this.props.editable ? this.doDay : undefined}\r\n                            />\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThisWeek;\r\n","import React from 'react';\r\nimport ThisWeek from \"./ThisWeek\";\r\nimport '../weeks.css';\r\n\r\nclass Doit extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <main id='arrange'>\r\n                <h1>\r\n                    Doit\r\n                </h1>\r\n                <ThisWeek\r\n                    key={'thisWeek'}\r\n                    weekName={'This Week'}\r\n                    editable={true}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.thisWeekBeginning}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Doit;\r\n","import React from 'react';\r\nimport ThisWeek from \"../Doit/ThisWeek\";\r\nimport '../weeks.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n            <ThisWeek\r\n                key={'archiveWeek' + i}\r\n                weekName={''}\r\n                scida={props.scida}\r\n                weekBeginning={week.date}\r\n                week={week}\r\n                archive={true}\r\n                editable={false}\r\n            />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    +\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span></span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Doit' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'></span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Doit!\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon' style={{fontSize: 3 + 'rem'}}>\r\n                    &larr;\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Settings' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    &#8230;\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Settings\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/turtledot.2097928d.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './settings.css';\r\n\r\nexport default function Settings(props) {\r\n\r\n    return (\r\n        <main>\r\n            <section className='clear'>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearItems}>\r\n                    clear items\r\n                </button>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearWeeks}>\r\n                    clear weeks\r\n                </button>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearAll}>\r\n                    clear all\r\n                </button>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}","import React from 'react';\r\nimport { Redirect, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Doit from \"./components/Doit\";\r\nimport Archive from \"./components/Archive\";\r\nimport Nav from './components/Nav';\r\nimport Header from './components/Header';\r\nimport Settings from './components/Settings';\r\nimport sortColor from \"./functions/sortColor\";\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          items: [],\r\n          weeks: [\r\n              {\r\n                  date: '',\r\n                  items: []\r\n              }\r\n          ],\r\n          lastWeekBeginning: this.getWeekBeginning(-7),\r\n          thisWeekBeginning: this.getWeekBeginning(),\r\n          nextWeekBeginning: this.getWeekBeginning(7),\r\n          colors: ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'],\r\n          days: ['M','T','W','T','F','S','S']\r\n      }\r\n      this.sortColor = sortColor.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n      this.getItems();\r\n      this.getWeeks();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n      if (prevProps !== this.props) {\r\n          this.getItems();\r\n          this.getWeeks();\r\n      }\r\n  }\r\n\r\n  newItemToState = (item) => {\r\n      this.setState({\r\n         items: [...this.state.items, item]\r\n      });\r\n  }\r\n\r\n  updateState = (items) => {\r\n      this.setState({\r\n         items: [...items]\r\n      });\r\n  }\r\n\r\n  getItems = () => {\r\n      if (localStorage.getItem('items')) {\r\n          const items = JSON.parse(localStorage.getItem('items'));\r\n          sortColor(items);\r\n          this.setState({\r\n              items: [...items]\r\n          });\r\n      }\r\n  }\r\n\r\n  getWeeks = () => {\r\n      if (localStorage.getItem('weeks')) {\r\n          const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n          this.setState({\r\n              weeks: [...weeks]\r\n          });\r\n      }\r\n  }\r\n\r\n  getWeekBeginning = (addWeek = 0) => {\r\n      let newDate = new Date(),\r\n          day = newDate.getDay();\r\n      function padZero(n){ return n < 10 ? '0' + n : n}\r\n      if (day > 1) {\r\n          newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n      } else if (day === 0) {\r\n          newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n      } else {\r\n          newDate.setDate(newDate.getDate() + addWeek);\r\n      }\r\n      return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n  }\r\n\r\n  addItemToWeek = (id, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week);\r\n      if (currentWeek === undefined) {\r\n          let newWeek = {\r\n              date: week,\r\n              items: [[id, [0,0,0,0,0,0,0]]]\r\n          }\r\n          weeks.push(newWeek);\r\n      } else {\r\n          currentWeek.items.push([id, [0,0,0,0,0,0,0]]);\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  addAllItemsToWeek = (ids, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week);\r\n      if (currentWeek === undefined) {\r\n          let newWeek = {\r\n              date: week,\r\n              items: []\r\n          }\r\n          ids.forEach(id => newWeek.items.push([id, [0,0,0,0,0,0,0]]));\r\n          weeks.push(newWeek);\r\n      } else {\r\n          ids.forEach(id => currentWeek.items.push([id, [0,0,0,0,0,0,0]]));\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  copyAllFromThisWeek = (week, copyWeek) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week);\r\n      if (currentWeek === undefined) {\r\n          let newWeek = {\r\n              date: week,\r\n              items: [...copyWeek]\r\n          }\r\n          weeks.push(newWeek);\r\n      } else {\r\n          currentWeek.items = [...copyWeek];\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  moveItemInWeek = (dragged, dropped, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          rowToDrop = currentWeek.items.splice(dragged, 1);\r\n      console.log(currentWeek)\r\n      currentWeek.items.splice(dropped, 0, ...rowToDrop);\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  removeItemFromWeek = (id, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          newWeekItems = currentWeek.items.filter(needle => needle[0] !== id);\r\n      currentWeek.items = [...newWeekItems];\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  changeDay = (event, week, closed = 0) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          item = currentWeek.items.find(item => item[0] === event.currentTarget.id),\r\n          day = event.currentTarget.dataset.day;\r\n      if (closed > 0) {\r\n          if (item[1][day] > 0) item[1][day] = (item[1][day] === 1 ? 100 : 1);\r\n      } else {\r\n          item[1][day] = (item[1][day] > 0 ? 0 : 1);\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  clearItems = () => {\r\n      if (window.confirm('Really delete all items? This cannot be undone!')) {\r\n          localStorage.removeItem('items');\r\n          this.setState({\r\n              items: []\r\n          });\r\n      }\r\n  }\r\n\r\n  clearWeeks = () => {\r\n      if (window.confirm('Really delete all weeks? This cannot be undone!')) {\r\n          localStorage.removeItem('weeks');\r\n          this.setState({\r\n              weeks: [\r\n                  {\r\n                      date: '',\r\n                      items: []\r\n                  }\r\n              ]\r\n          });\r\n      }\r\n  }\r\n\r\n  clearAll = () => {\r\n      if (window.confirm('Really delete all data? This cannot be undone!')) {\r\n          localStorage.clear();\r\n          this.setState({\r\n              items: [],\r\n              weeks: [\r\n                  {\r\n                      date: '',\r\n                      items: []\r\n                  }\r\n              ]\r\n          });\r\n      }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n              <Header />\r\n              <div className='bgPanel'></div>\r\n              <Switch>\r\n                  <Route path='/Items'>\r\n                      <Items\r\n                          items={this.state.items}\r\n                          colors={this.state.colors}\r\n                          onNewItemToState={this.newItemToState}\r\n                          onUpdateState={this.updateState}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Arrange'>\r\n                      <Arrange\r\n                          scida={this.state}\r\n                          onChangeDay={this.changeDay}\r\n                          onAddItemToWeek={this.addItemToWeek}\r\n                          onAddAllItemsToWeek={this.addAllItemsToWeek}\r\n                          onCopyAllFromThisWeek={this.copyAllFromThisWeek}\r\n                          onMoveItemInWeek={this.moveItemInWeek}\r\n                          onRemoveItemFromWeek={this.removeItemFromWeek}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Doit'>\r\n                      <Doit\r\n                          scida={this.state}\r\n                          onChangeDay={this.changeDay}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Archive'>\r\n                      <Archive\r\n                          scida={this.state}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Settings'>\r\n                      <Settings\r\n                          onClearItems={this.clearItems}\r\n                          onClearWeeks={this.clearWeeks}\r\n                          onClearAll={this.clearAll}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/'>\r\n                      <Redirect to='/Doit' />\r\n                  </Route>\r\n              </Switch>\r\n              <Nav />\r\n          </Router>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}