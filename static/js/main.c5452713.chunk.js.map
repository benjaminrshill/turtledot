{"version":3,"sources":["components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Table/Row.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Table/DoRow.js","components/Doit/DoitWeek/index.js","components/Doit/index.js","components/Settings/index.js","components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/sortColor.js","App.js","index.js"],"names":["UpdateItem","props","componentDidMount","id","setState","text","number","color","handleInput","event","name","target","value","setColor","updateItem","state","length","onUpdateItem","className","type","this","onChange","min","max","onClick","onCancelUpdate","colors","map","React","Component","Item","componentDidUpdate","prevProps","prevState","snapshot","currentlyAdding","cancelEdit","startEdit","editing","cancelAdding","editItem","data","storedItems","JSON","parse","localStorage","getItem","edited","findIndex","item","setItem","stringify","onEditIteminState","onDeleteItem","Items","newItem","adding","cancelNewItem","addItem","uuidv4","push","onNewItemToState","editItemInState","onUpdateState","deleteItem","window","confirm","filtered","filter","items","Row","currentNumber","todo","n","reduce","a","b","tooHigh","tooLow","draggable","weekBeginning","data-index","index","data-dragid","data-dragweek","onDragStart","onDragOver","onDragLeave","onDrop","onRemoveItem","day","i","data-day","data-week","onChangeDay","touchData","ArrangeWeek","createWeek","then","selected","unselected","scida","weeks","find","week","date","undefined","currentWeek","forEach","splice","saveWeek","onAddItemToWeek","currentTarget","addAllItems","ids","onAddAllItemsToWeek","preventDefault","movedItem","document","getElementById","movingOver","movedParent","parentNode","rect","getBoundingClientRect","dataset","dragweek","dataTransfer","dropEffect","classList","add","clientY","top","bottom","remove","childNodes","row","droppingOn","onMoveItemInWeek","removeItem","onRemoveItemFromWeek","saveDay","weekName","days","Arrange","nextWeekBeginning","thisWeekBeginning","DoRow","allDone","onDoDay","DoitWeek","allItems","doDay","editable","Doit","lastWeekBeginning","Settings","onClearItems","onClearWeeks","onClearAll","Header","src","turtledot","alt","Nav","to","activeClassName","sortColor","array","sort","App","getItems","getWeeks","newItemToState","updateState","getWeekBeginning","addWeek","newDate","Date","getDay","padZero","setDate","getDate","getFullYear","getMonth","addItemToWeek","needle","newWeek","addAllItemsToWeek","moveItemInWeek","dragged","dropped","rowToDrop","console","log","removeItemFromWeek","newWeekItems","changeDay","closed","clearItems","clearWeeks","clearAll","clear","bind","basename","process","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c5452713.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UpdateItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            text: '',\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.id) this.setState({\r\n            id: this.props.id,\r\n            text: this.props.text,\r\n            number: this.props.number,\r\n            color: this.props.color\r\n        });\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    setColor = (event) => {\r\n        this.setState({\r\n            color: event.target.value\r\n        });\r\n    }\r\n\r\n    updateItem = () => {\r\n        if (this.state.text.length > 0) {\r\n            this.props.onUpdateItem({...this.state});\r\n            this.setState({\r\n                id: '',\r\n                text: '',\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className='item'>\r\n                    <input\r\n                        type='text'\r\n                        name='text'\r\n                        value={this.state.text}\r\n                        onChange={this.handleInput}\r\n                        className='text'\r\n                    />\r\n                    <input\r\n                        type='number'\r\n                        name='number'\r\n                        min='1'\r\n                        max='35'\r\n                        value={this.state.number}\r\n                        onChange={this.handleInput}\r\n                        className='number'\r\n                    />\r\n                    <button\r\n                        className={'color ' + this.state.color}>\r\n                    </button>\r\n                    <button\r\n                        onClick={this.props.onCancelUpdate}\r\n                        className='plus-sign delete'>\r\n                        +\r\n                    </button>\r\n                </div>\r\n                <div className='edit-box'>\r\n                    <div className='palette'>\r\n                        {this.props.colors.map(color =>\r\n                            <button\r\n                                key={color}\r\n                                value={color}\r\n                                className={'palette-square ' + color}\r\n                                onClick={this.setColor}>\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <div className='edit-box-buttons'>\r\n                        <button\r\n                            onClick={this.updateItem}\r\n                            className='edit-complete'>\r\n                            &#10003;\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateItem;\r\n","import React from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\n\r\nclass Item extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props && this.props.currentlyAdding) {\r\n            this.cancelEdit();\r\n        }\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.setState({\r\n            editing: true\r\n        });\r\n        this.props.cancelAdding();\r\n    }\r\n\r\n    cancelEdit = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n\r\n    editItem = (data) => {\r\n        let storedItems = JSON.parse(localStorage.getItem('items'));\r\n        let edited = storedItems.findIndex(item => item.id === data.id);\r\n        storedItems[edited] = data;\r\n        localStorage.setItem('items', JSON.stringify(storedItems));\r\n        this.props.onEditIteminState(storedItems);\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.editing ?\r\n                <UpdateItem\r\n                    id={this.props.id}\r\n                    text={this.props.text}\r\n                    number={this.props.number}\r\n                    color={this.props.color}\r\n                    colors={this.props.colors}\r\n                    onUpdateItem={this.editItem}\r\n                    onCancelUpdate={this.cancelEdit}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={this.startEdit}\r\n                        className='text'>\r\n                        {this.props.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={this.startEdit}\r\n                        className='number'>\r\n                        {this.props.number}\r\n                    </button>\r\n                    <button\r\n                        onClick={this.startEdit}\r\n                        className={'color ' + this.props.color}>\r\n\r\n                    </button>\r\n                    <button\r\n                        value={this.props.id}\r\n                        onClick={this.props.onDeleteItem}\r\n                        className='plus-sign delete'>\r\n                        +\r\n                    </button>\r\n                </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport './items.css';\r\n\r\nclass Items extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            adding: false\r\n        };\r\n    }\r\n\r\n    newItem = () => {\r\n        this.setState({\r\n            adding: true\r\n        });\r\n    }\r\n\r\n    cancelNewItem = () => {\r\n        this.setState({\r\n            adding: false\r\n        });\r\n    }\r\n\r\n    addItem = (data) => {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            number: data.number,\r\n            color: data.color,\r\n            type: 'boolean'\r\n        };\r\n        let storedItems = [];\r\n        if (localStorage.getItem('items')) {\r\n            storedItems = JSON.parse(localStorage.getItem('items'));\r\n        }\r\n        storedItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(storedItems));\r\n        this.props.onNewItemToState(item);\r\n    }\r\n\r\n    editItemInState = (edited) => {\r\n        this.props.onUpdateState(edited);\r\n    }\r\n\r\n    deleteItem = (event) => {\r\n        if (window.confirm('Really delete?')) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let filtered = storedItems.filter(item => item.id !== event.target.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            this.props.onUpdateState(filtered);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main id='items'>\r\n                <h1>\r\n                    Items\r\n                </h1>\r\n                {this.props.items.map(item =>\r\n                    <Item\r\n                        key={item.id}\r\n                        id={item.id}\r\n                        text={item.text}\r\n                        number={item.number}\r\n                        color={item.color}\r\n                        colors={this.props.colors}\r\n                        currentlyAdding={this.state.adding}\r\n                        onEditIteminState={this.editItemInState}\r\n                        cancelAdding={this.cancelNewItem}\r\n                        onDeleteItem={this.deleteItem}\r\n                    />\r\n                )}\r\n                {this.state.adding ?\r\n                    <UpdateItem\r\n                        colors={this.props.colors}\r\n                        onUpdateItem={this.addItem}\r\n                        onCancelUpdate={this.cancelNewItem}\r\n                    />\r\n                    :\r\n                    <button\r\n                        onClick={this.newItem}\r\n                        className='plus-sign add'>\r\n                        +\r\n                    </button>\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import React from 'react';\r\n\r\nexport default function Row(props) {\r\n\r\n    const onesAndZeroes = props.todo.map(n => n = (n >= 1 ? 1 : 0));\r\n    const currentNumber = onesAndZeroes.reduce((a, b) => a + b, 0);\r\n    const tooHigh = currentNumber > +props.number;\r\n    const tooLow = currentNumber < +props.number;\r\n\r\n    return (\r\n        <tr\r\n            draggable={true}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={props.color}\r\n            onDragStart={props.onDragStart}\r\n            onDragOver={props.onDragOver}\r\n            onDragLeave={props.onDragLeave}\r\n            onDrop={props.onDrop}>\r\n            <td\r\n                id={props.id}\r\n                className='week-item left-column'>\r\n                <button\r\n                    className='week-item-delete'\r\n                    value={props.id}\r\n                    onClick={props.onRemoveItem}>\r\n                    &#10006;\r\n                </button>\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number' + (tooHigh ? ' week-number-arrow-down' : tooLow ? ' week-number-arrow-up' : '')}>\r\n                {props.number}\r\n            </td>\r\n            {props.todo.map((day, i) =>\r\n                <td\r\n                    key={props.id + i}\r\n                    id={props.id}\r\n                    data-day={i}\r\n                    data-week={props.weekBeginning}\r\n                    onClick={props.onChangeDay}\r\n                    className='main-cell week-spots'>\r\n                    <div\r\n                        className={'spot' + (day > 0 ? ' grey' : '')}>\r\n                    </div>\r\n                </td>\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Table/Row';\r\nimport '../../weeks.css';\r\nimport '../arrange.css';\r\n\r\nlet touchData = {};\r\nlet timer;\r\n\r\nclass ArrangeWeek extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: [\r\n                {\r\n                    id: '',\r\n                    text: '',\r\n                    number: 0,\r\n                    color: '',\r\n                    todo: [0,0,0,0,0,0,0]\r\n                }\r\n            ],\r\n            unselected: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.createWeek().then();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props) {\r\n            this.createWeek().then();\r\n        }\r\n    }\r\n\r\n    createWeek = async () => {\r\n        let selected = [];\r\n        let unselected = [...this.props.scida.items];\r\n        let currentWeek = await this.props.scida.weeks.find(week => week.date === this.props.weekBeginning);\r\n        if (currentWeek !== undefined) {\r\n            currentWeek.items.forEach(week => {\r\n                if (unselected.find(item => item.id === week[0])) {\r\n                    let index = unselected.findIndex(index => index.id === week[0]);\r\n                    let item = unselected.splice(index, 1);\r\n                    item[0].todo = week[1];\r\n                    selected.push(item[0]);\r\n                }\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: [...selected],\r\n            unselected: [...unselected]\r\n        });\r\n    }\r\n\r\n    saveWeek = (event) => {\r\n        this.props.onAddItemToWeek(event.currentTarget.value, this.props.weekBeginning);\r\n    }\r\n\r\n    addAllItems = () => {\r\n        let ids = [];\r\n        this.state.unselected.forEach(item => ids.push(item.id));\r\n        this.props.onAddAllItemsToWeek(ids, this.props.weekBeginning);\r\n    }\r\n\r\n    onDragStart = (event) => {\r\n        // event.preventDefault();\r\n        touchData.item = event.currentTarget.id;\r\n    }\r\n\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n        let movedItem = document.getElementById(touchData.item),\r\n            movingOver = event.currentTarget,\r\n            movedParent = movingOver.parentNode;\r\n        touchData.rect = movingOver.getBoundingClientRect();\r\n        if (movedParent.dataset.dragweek === movingOver.dataset.dragweek) {\r\n            if (movingOver === movedItem) { // prevent dropping on self\r\n                event.dataTransfer.dropEffect = 'none';\r\n            } else if (movedItem.dataset.dragweek === movingOver.dataset.dragweek) {\r\n                movingOver.classList.add('scooch');\r\n                event.dataTransfer.dropEffect = 'move';\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragLeave = (event) => {\r\n        if (event.clientY < touchData.rect.top || event.clientY > touchData.rect.bottom) {\r\n            event.currentTarget.classList.remove('scooch');\r\n        }\r\n    }\r\n\r\n    onDrop = (event) => {\r\n        event.preventDefault();\r\n        event.currentTarget.parentNode.childNodes.forEach(row => row.classList.remove('scooch'));\r\n        let movedItem = document.getElementById(touchData.item),\r\n            droppingOn = event.currentTarget;\r\n        this.props.onMoveItemInWeek(+movedItem.dataset.index, +droppingOn.dataset.index, droppingOn.dataset.dragweek);\r\n    }\r\n\r\n    removeItem = (event) => {\r\n        if (window.confirm('Really remove?')) {\r\n            this.props.onRemoveItemFromWeek(event.target.value, this.props.weekBeginning);\r\n        }\r\n    }\r\n\r\n    saveDay = (event) => {\r\n        this.props.onChangeDay(event, this.props.weekBeginning);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='week'>\r\n                <h2>\r\n                    {this.props.weekName}\r\n                </h2>\r\n                <section>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <td className='week-date left-column'>\r\n                                {this.props.weekBeginning}\r\n                            </td>\r\n                            <td className='week-date'>\r\n\r\n                            </td>\r\n                            {this.props.scida.days.map((day, i) =>\r\n                                <td\r\n                                    key={day + i + this.props.weekBeginning}\r\n                                    className='day'>\r\n                                    {day}\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody data-dragweek={this.props.weekBeginning}>\r\n                        {this.state.selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + this.props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={this.props.weekBeginning}\r\n                                onChangeDay={this.saveDay}\r\n                                onDragStart={this.onDragStart}\r\n                                onDragOver={this.onDragOver}\r\n                                onDragLeave={this.onDragLeave}\r\n                                onDrop={this.onDrop}\r\n                                onRemoveItem={this.removeItem}\r\n                            />\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n                {this.state.unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <button\r\n                        className='addAllItems'\r\n                        onClick={this.addAllItems}>\r\n                        add all\r\n                    </button>\r\n                    <div className='items-list'>\r\n                        {this.state.unselected.map(item =>\r\n                            <button\r\n                                key={item.id + this.props.weekBeginning + 'u'}\r\n                                value={item.id}\r\n                                className={'items-list-item ' + item.color}\r\n                                onClick={this.saveWeek}>\r\n                                {item.text}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArrangeWeek;\r\n","import React from 'react';\r\nimport ArrangeWeek from \"./ArrangeWeek\";\r\nimport '../weeks.css';\r\n\r\nclass Arrange extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <main id='arrange'>\r\n                <h1>\r\n                    Arrange\r\n                </h1>\r\n                <ArrangeWeek\r\n                    key={'nextWeek'}\r\n                    weekName={'Next Week'}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.nextWeekBeginning}\r\n                    onAddItemToWeek={this.props.onAddItemToWeek}\r\n                    onAddAllItemsToWeek={this.props.onAddAllItemsToWeek}\r\n                    onMoveItemInWeek={this.props.onMoveItemInWeek}\r\n                    onRemoveItemFromWeek={this.props.onRemoveItemFromWeek}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n                <ArrangeWeek\r\n                    key={'thisWeek'}\r\n                    weekName={'This Week'}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.thisWeekBeginning}\r\n                    onAddItemToWeek={this.props.onAddItemToWeek}\r\n                    onAddAllItemsToWeek={this.props.onAddAllItemsToWeek}\r\n                    onMoveItemInWeek={this.props.onMoveItemInWeek}\r\n                    onRemoveItemFromWeek={this.props.onRemoveItemFromWeek}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrange;\r\n","import React from 'react';\r\n\r\nexport default function DoRow(props) {\r\n\r\n    const currentNumber = props.todo.reduce((a, b) => a + b, 0);\r\n    const allDone = currentNumber >= +props.number * 100;\r\n\r\n    return (\r\n        <tr\r\n            id={props.id + props.weekBeginning}\r\n            className={allDone ? 'allDone' : props.color}>\r\n            <td\r\n                id={props.id}\r\n                className='week-item left-column'>\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'}>\r\n                {props.number}\r\n            </td>\r\n            {props.todo.map((day, i) =>\r\n                <td\r\n                    key={props.id + i}\r\n                    id={props.id}\r\n                    data-day={i}\r\n                    data-week={props.weekBeginning}\r\n                    onClick={props.onDoDay}\r\n                    className='main-cell week-spots'>\r\n                    <div\r\n                        className={'spot' + (day === 100 ? ' closed' : day === 1 ? ' open' : '')}>\r\n                    </div>\r\n                </td>\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport DoRow from \"../../Table/DoRow\";\r\nimport '../../weeks.css';\r\n\r\nclass DoitWeek extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [\r\n                {\r\n                    id: '',\r\n                    text: '',\r\n                    number: 0,\r\n                    color: '',\r\n                    todo: [0,0,0,0,0,0,0]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.createWeek().then();\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if (prevProps !== this.props) {\r\n            this.createWeek().then();\r\n        }\r\n    }\r\n\r\n    createWeek = async () => {\r\n        let items = [],\r\n            allItems = [...this.props.scida.items];\r\n        let currentWeek = await this.props.scida.weeks.find(week => week.date === this.props.weekBeginning);\r\n        if (currentWeek !== undefined) {\r\n            currentWeek.items.forEach(week => {\r\n                let index = allItems.findIndex(index => index.id === week[0]);\r\n                let item = allItems.splice(index, 1);\r\n                item[0].todo = week[1];\r\n                items.push(item[0]);\r\n            });\r\n        }\r\n        this.setState({\r\n            items: [...items]\r\n        });\r\n    }\r\n\r\n    doDay = (event) => {\r\n        this.props.onChangeDay(event, this.props.weekBeginning, 1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='week'>\r\n                <h2>\r\n                    {this.props.weekName}\r\n                </h2>\r\n                <section>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <td className='week-date left-column'>\r\n                                {this.props.weekBeginning}\r\n                            </td>\r\n                            <td className='week-date'>\r\n\r\n                            </td>\r\n                            {this.props.scida.days.map((day, i) =>\r\n                                <td\r\n                                    key={day + i + this.props.weekBeginning}\r\n                                    className='day'>\r\n                                    {day}\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.items.map((item, i) =>\r\n                            <DoRow\r\n                                key={item.id + this.props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={this.props.weekBeginning}\r\n                                onDoDay={this.props.editable ? this.doDay : undefined}\r\n                            />\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DoitWeek;\r\n","import React from 'react';\r\nimport DoitWeek from \"./DoitWeek\";\r\nimport '../weeks.css';\r\n\r\nclass Doit extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <main id='arrange'>\r\n                <h1>\r\n                    Doit\r\n                </h1>\r\n                <DoitWeek\r\n                    key={'thisWeek'}\r\n                    weekName={'This Week'}\r\n                    editable={true}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.thisWeekBeginning}\r\n                    onChangeDay={this.props.onChangeDay}\r\n                />\r\n                <DoitWeek\r\n                    key={'lastWeek'}\r\n                    weekName={'Last Week'}\r\n                    editable={false}\r\n                    scida={this.props.scida}\r\n                    weekBeginning={this.props.scida.lastWeekBeginning}\r\n                />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Doit;\r\n","import React from 'react';\r\nimport './settings.css';\r\n\r\nexport default function Settings(props) {\r\n\r\n    return (\r\n        <main>\r\n            <section className='clear'>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearItems}>\r\n                    clear items\r\n                </button>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearWeeks}>\r\n                    clear weeks\r\n                </button>\r\n                <button\r\n                    className='clear-button'\r\n                    onClick={props.onClearAll}>\r\n                    clear all\r\n                </button>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/turtledot.8a80777e.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    +\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span></span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Doit' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'></span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Doit!\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Settings' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    &#8230;\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Settings\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}","import React from 'react';\r\nimport { Redirect, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Doit from \"./components/Doit\";\r\nimport Settings from './components/Settings';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport sortColor from \"./functions/sortColor\";\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          items: [],\r\n          weeks: [\r\n              {\r\n                  date: '',\r\n                  items: []\r\n              }\r\n          ],\r\n          lastWeekBeginning: this.getWeekBeginning(-7),\r\n          thisWeekBeginning: this.getWeekBeginning(),\r\n          nextWeekBeginning: this.getWeekBeginning(7),\r\n          colors: ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'],\r\n          days: ['M','T','W','T','F','S','S']\r\n      }\r\n      this.sortColor = sortColor.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n      this.getItems();\r\n      this.getWeeks();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n      if (prevProps !== this.props) {\r\n          this.getItems();\r\n          this.getWeeks();\r\n      }\r\n  }\r\n\r\n  newItemToState = (item) => {\r\n      this.setState({\r\n         items: [...this.state.items, item]\r\n      });\r\n  }\r\n\r\n  updateState = (items) => {\r\n      this.setState({\r\n         items: [...items]\r\n      });\r\n  }\r\n\r\n  getItems = () => {\r\n      if (localStorage.getItem('items')) {\r\n          const items = JSON.parse(localStorage.getItem('items'));\r\n          sortColor(items);\r\n          this.setState({\r\n              items: [...items]\r\n          });\r\n      }\r\n  }\r\n\r\n  getWeeks = () => {\r\n      if (localStorage.getItem('weeks')) {\r\n          const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n          this.setState({\r\n              weeks: [...weeks]\r\n          });\r\n      }\r\n  }\r\n\r\n  getWeekBeginning = (addWeek = 0) => {\r\n      let newDate = new Date(),\r\n          day = newDate.getDay();\r\n      function padZero(n){ return n < 10 ? '0' + n : n}\r\n      if (day > 1) {\r\n          newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n      } else if (day === 0) {\r\n          newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n      } else {\r\n          newDate.setDate(newDate.getDate() + addWeek);\r\n      }\r\n      return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n  }\r\n\r\n  addItemToWeek = (id, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week);\r\n      if (currentWeek === undefined) {\r\n          let newWeek = {\r\n              date: week,\r\n              items: [[id, [0,0,0,0,0,0,0]]]\r\n          }\r\n          weeks.push(newWeek);\r\n      } else {\r\n          currentWeek.items.push([id, [0,0,0,0,0,0,0]]);\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  addAllItemsToWeek = (ids, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week);\r\n      if (currentWeek === undefined) {\r\n          let newWeek = {\r\n              date: week,\r\n              items: []\r\n          }\r\n          ids.forEach(id => newWeek.items.push([id, [0,0,0,0,0,0,0]]));\r\n          weeks.push(newWeek);\r\n      } else {\r\n          ids.forEach(id => currentWeek.items.push([id, [0,0,0,0,0,0,0]]));\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  moveItemInWeek = (dragged, dropped, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          rowToDrop = currentWeek.items.splice(dragged, 1);\r\n      console.log(currentWeek)\r\n      currentWeek.items.splice(dropped, 0, ...rowToDrop);\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  removeItemFromWeek = (id, week) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          newWeekItems = currentWeek.items.filter(needle => needle[0] !== id);\r\n      currentWeek.items = [...newWeekItems];\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  changeDay = (event, week, closed = 0) => {\r\n      let weeks = [...this.state.weeks],\r\n          currentWeek = weeks.find(needle => needle.date === week),\r\n          item = currentWeek.items.find(item => item[0] === event.currentTarget.id),\r\n          day = event.currentTarget.dataset.day;\r\n      if (closed > 0) {\r\n          if (item[1][day] > 0) item[1][day] = (item[1][day] === 1 ? 100 : 1);\r\n      } else {\r\n          item[1][day] = (item[1][day] > 0 ? 0 : 1);\r\n      }\r\n      localStorage.setItem('weeks', JSON.stringify(weeks));\r\n      this.setState({\r\n          weeks: [...weeks]\r\n      });\r\n  }\r\n\r\n  clearItems = () => {\r\n      if (window.confirm('Really delete all items? This cannot be undone!')) {\r\n          localStorage.removeItem('items');\r\n          this.setState({\r\n              items: []\r\n          });\r\n      }\r\n  }\r\n\r\n  clearWeeks = () => {\r\n      if (window.confirm('Really delete all weeks? This cannot be undone!')) {\r\n          localStorage.removeItem('weeks');\r\n          this.setState({\r\n              weeks: [\r\n                  {\r\n                      date: '',\r\n                      items: []\r\n                  }\r\n              ]\r\n          });\r\n      }\r\n  }\r\n\r\n  clearAll = () => {\r\n      if (window.confirm('Really delete all data? This cannot be undone!')) {\r\n          localStorage.clear();\r\n          this.setState({\r\n              items: [],\r\n              weeks: [\r\n                  {\r\n                      date: '',\r\n                      items: []\r\n                  }\r\n              ]\r\n          });\r\n      }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n              <Header />\r\n              <Switch>\r\n                  <Route path='/Items'>\r\n                      <Items\r\n                          items={this.state.items}\r\n                          colors={this.state.colors}\r\n                          onNewItemToState={this.newItemToState}\r\n                          onUpdateState={this.updateState}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Arrange'>\r\n                      <Arrange\r\n                          scida={this.state}\r\n                          onChangeDay={this.changeDay}\r\n                          onAddItemToWeek={this.addItemToWeek}\r\n                          onAddAllItemsToWeek={this.addAllItemsToWeek}\r\n                          onMoveItemInWeek={this.moveItemInWeek}\r\n                          onRemoveItemFromWeek={this.removeItemFromWeek}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Doit'>\r\n                      <Doit\r\n                          scida={this.state}\r\n                          onChangeDay={this.changeDay}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/Settings'>\r\n                      <Settings\r\n                          onClearItems={this.clearItems}\r\n                          onClearWeeks={this.clearWeeks}\r\n                          onClearAll={this.clearAll}\r\n                      />\r\n                  </Route>\r\n                  <Route path='/'>\r\n                      <Redirect to='/Doit' />\r\n                  </Route>\r\n              </Switch>\r\n              <Nav />\r\n          </Router>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}